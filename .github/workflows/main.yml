name: Auto-Sync-Nightly

on:
  schedule:
    - cron: "*/30 * * * *"        # every 30 min (UTC)
  workflow_dispatch:
    inputs:
      force_build:
        description: "Run full build even when no upstream commits"
        type: boolean
        default: false

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
# -------------------------------------------------
# 1) SYNC  – fast-forward master from upstream repo
# -------------------------------------------------
  sync:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      changed: ${{ steps.sync.outputs.has_new_commits }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: sync
        name: Fast-forward from upstream
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: hashcat/hashcat
          upstream_sync_branch: master
          target_sync_branch: master
          target_repo_token: ${{ secrets.PAT_PUSH }}

# -------------------------------------------------
# 2) BUILD – matrix runs only when condition is met
# -------------------------------------------------
  build:
    needs: sync
    if: needs.sync.outputs.changed == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_build == 'true')
    strategy:
      fail-fast: false
      matrix:
        include:
          # ---------- Linux ----------
          - os: ubuntu-22.04
            os_name: linux
            shared: 0
          - os: ubuntu-22.04
            os_name: linux
            shared: 1
          # ---------- macOS ----------
          - os: macos-14
            os_name: macos
            shared: 0
          - os: macos-14
            os_name: macos
            shared: 1
          # ---------- Windows ----------
          - os: windows-2022
            os_name: windows
            shared: 0
          - os: windows-2022
            os_name: windows
            shared: 1
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Windows → MSYS2 tool-chain
      - uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          update: true
          install: >
            gcc git make libiconv libiconv-devel

      # Build for POSIX hosts
      - name: Build (bash)
        if: runner.os != 'Windows'
        shell: bash
        env:
          SHARED: ${{ matrix.shared }}
        run: make -j"$(nproc)"

      # Build for Windows hosts
      - name: Build (msys2)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        env:
          SHARED: ${{ matrix.shared }}
        run: make -j"$(nproc || 4)"

      - uses: actions/upload-artifact@v4
        with:
          name: hashcat-${{ matrix.os_name }}-${{ matrix.shared == 0 && 'static' || 'shared' }}
          path: |
            hashcat*
            libhashcat*
            charsets/
            docs/
            extra/
            layouts/
            masks/
            modules/
            rules/
            example*

# -------------------------------------------------
# 3) RELEASE – nightly tag with fresh binaries
# -------------------------------------------------
  release:
    needs: build
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-22.04
    permissions:
      contents: write         # <- crucial
    steps:
      - uses: actions/download-artifact@v4
      - uses: ncipollo/release-action@v1
        with:
          tag: nightly-${{ github.sha }}
          name: "Nightly build – ${{ github.sha }}"
          artifacts: "**/hashcat-*"
          generateReleaseNotes: true
          allowUpdates: true
