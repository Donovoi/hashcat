name: Auto-Sync-Nightly

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:
    inputs:
      force_build:
        description: Force build even if upstream unchanged
        type: boolean
        default: false

permissions: { contents: read }
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
################################################################################
# 1) SYNC – keep fork up-to-date
################################################################################
  sync:
    runs-on: ubuntu-22.04
    permissions: { contents: write }
    outputs:
      changed: ${{ steps.sync.outputs.has_new_commits }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: hashcat/hashcat
          upstream_sync_branch: master
          target_sync_branch: master
          target_repo_token: ${{ secrets.PAT_PUSH }}

################################################################################
# 2) BUILD – Linux | Windows → parts-<os>.7z
################################################################################
  build:
    needs: sync
    if: >
      needs.sync.outputs.changed == 'true' ||
      (github.event_name == 'workflow_dispatch' &&
       github.event.inputs.force_build == 'true')

    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-22.04 , os_name: linux  , shared: 0 }
          - { os: windows-2022 , os_name: windows, shared: 1 }

    runs-on: ${{ matrix.os }}
    permissions: { contents: read }

    steps:
      - uses: actions/checkout@v4

      # Windows tool-chain ----------------------------------------------------
      - name: Set up MSYS2
        if: matrix.os_name == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          install: >
            gcc git make libiconv libiconv-devel
          msystem: MINGW64
          update: true
          release: false

      # Compile --------------------------------------------------------------
      - name: make (Linux)
        if: matrix.os_name == 'linux'
        env:
          SHARED: ${{ matrix.shared }}
        run: make -j"$(nproc)"

      - name: make (Windows)
        if: matrix.os_name == 'windows'
        shell: msys2 {0}
        env:
          SHARED: ${{ matrix.shared }}
        run: make -j"${NUMBER_OF_PROCESSORS:-4}"

      # Legacy executable aliases -------------------------------------------
      - name: Add aliases (Linux)
        if: matrix.os_name == 'linux'
        run: |
          chmod 0755 hashcat
          cp -p hashcat hashcat.bin
          cp -p hashcat hashcat64.bin

      - name: Add aliases (Windows)
        if: matrix.os_name == 'windows'
        shell: msys2 {0}
        run: cp -p hashcat.exe hashcat64.exe

      # Create .7z artefact directly ----------------------------------------
      - name: Pack artefact
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(hashcat* libhashcat* hashcat.hcstat2)
          for d in OpenCL charsets docs extra layouts masks modules rules tunings example*; do
            [[ -e "$d" ]] && files+=("$d")
          done
          7z a -mx=9 -mmt=on "parts-${{ matrix.os_name }}.7z" "${files[@]}"
      - uses: actions/upload-artifact@v4
        with:
          name: parts-${{ matrix.os_name }}
          path: parts-${{ matrix.os_name }}.7z

################################################################################
# 3) RELEASE – publish the ready archives
################################################################################
  release:
    needs: build
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-22.04
    permissions: { contents: write }

    steps:
      - uses: actions/download-artifact@v4

      - name: Publish / update release
        uses: ncipollo/release-action@v1
        with:
          tag: Hashcat-Latest
          name: Hashcat-Latest
          artifacts: parts-*/*.7z
          allowUpdates: true
          generateReleaseNotes: true
