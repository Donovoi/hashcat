name: Auto-Sync-Nightly

on:
  schedule:
    - cron: "*/30 * * * *"            # every 30 min UTC
  workflow_dispatch:
    inputs:
      force_build:
        description: "Run full build even if upstream unchanged"
        type: boolean
        default: false

permissions: { contents: read }       # least-privilege default

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
###############################################################################
# 1) SYNC – fast-forward fork/master from upstream
###############################################################################
  sync:
    runs-on: ubuntu-22.04
    permissions: { contents: write }
    outputs:
      changed: ${{ steps.sync.outputs.has_new_commits }}
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: false }

      - id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: hashcat/hashcat
          upstream_sync_branch: master
          target_sync_branch: master
          target_repo_token: ${{ secrets.PAT_PUSH }}

###############################################################################
# 2) BUILD – Linux / macOS / Windows  ×  static | shared
###############################################################################
  build:
    needs: sync
    if: needs.sync.outputs.changed == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_build == 'true')
    strategy:
      fail-fast: false
      matrix:
        include:
          # ---------- Linux ----------
          - { os: ubuntu-22.04 , os_name: linux  , shared: 0 }
          - { os: ubuntu-22.04 , os_name: linux  , shared: 1 }
          # ---------- macOS ----------
          - { os: macos-14     , os_name: macos  , shared: 0 }
          - { os: macos-14     , os_name: macos  , shared: 1 }
          # ---------- Windows ----------
          - { os: windows-2022 , os_name: windows, shared: 0 }
          - { os: windows-2022 , os_name: windows, shared: 1 }

    runs-on: ${{ matrix.os }}
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4

      # ---- Windows: MSYS2 tool-chain (unique cache key) ----
      - name: Set up MSYS2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          install: >
            gcc git make libiconv libiconv-devel

      # ---- Make on all POSIX hosts or MSYS2 ----
      - name: Build Hashcat
        shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
        env: { SHARED: ${{ matrix.shared }} }
        run: make -j"$(nproc || sysctl -n hw.ncpu || 4)"

      # ---- Post-build: add legacy names / move macOS out of root ----
      - name: Arrange binaries
        shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
        run: |
          set -e
          case "${{ matrix.os_name }}" in
            linux)
              chmod a+x hashcat
              cp hashcat hashcat.bin
              cp hashcat hashcat64.bin
              ;;
            macos)
              mkdir -p macos
              mv hashcat* macos/
              mv libhashcat*.dylib macos/ || true
              ;;
            windows)
              cp hashcat.exe hashcat64.exe
              ;;
          esac

      # ---- Upload artefact ----
      - uses: actions/upload-artifact@v4
        with:
          name: parts-${{ matrix.os_name }}-${{ matrix.shared }}
          path: |
            hashcat*
            libhashcat*
            macos/
            charsets/
            docs/
            extra/
            layouts/
            masks/
            modules/
            rules/
            example*

###############################################################################
# 3) RELEASE – merge artefacts → single hashcat.7z
###############################################################################
  release:
    needs: build
    if: always() && needs.build.result == 'success'
    runs-on: ubuntu-22.04             # p7zip pre-installed
    permissions: { contents: write }
    steps:
      - uses: actions/download-artifact@v4

      - name: Merge artefacts (Linux + Windows in root; macOS already isolated)
        run: |
          shopt -s nullglob
          for d in parts-*; do
            rsync -a "$d"/ ./      # later artefacts overwrite earlier duplicates
            rm -rf "$d"
          done

      - name: Create hashcat.7z
        run: 7z a -t7z -mx=9 hashcat.7z ./*

      - name: Publish / Update release
        uses: ncipollo/release-action@v1
        with:
          tag: Hashcat-Latest
          name: Hashcat-Latest
          artifacts: hashcat.7z
          allowUpdates: true
          generateReleaseNotes: true
