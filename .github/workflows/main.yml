name: Auto-Sync-Nightly

on:
  # Poll upstream every 30 minutes (UTC). Adjust to taste.
  schedule:
    - cron: "*/30 * * * *"
  # Manual trigger from the Actions tab
  workflow_dispatch:

# Restrict the implicit GITHUB_TOKEN to read-only; jobs elevate as needed
permissions:
  contents: read

jobs:
# --------------------------------------------------------
# 1) SYNC – fast-forward master from hashcat/hashcat
# --------------------------------------------------------
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # allow PAT-driven push
    outputs:
      changed: ${{ steps.sync.outputs.has_new_commits }}
    steps:
      - uses: actions/checkout@v4        # no credentials – we'll push manually
        with:
          persist-credentials: false
      - name: Fast-forward from upstream
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: hashcat/hashcat
          upstream_sync_branch: master
          target_sync_branch: master
          target_repo_token: ${{ secrets.PAT_PUSH }}  # PAT triggers further jobs

# --------------------------------------------------------
# 2) BUILD – only if new commits were synced
# --------------------------------------------------------
  build:
    needs: sync
    if: needs.sync.outputs.changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          # ---- Linux ----
          - os: ubuntu-latest
            os_name: linux
            shell: bash
            shared: 0
          - os: ubuntu-latest
            os_name: linux
            shell: bash
            shared: 1
          # ---- macOS ----
          - os: macos-latest
            os_name: macos
            shell: bash
            shared: 0
          - os: macos-latest
            os_name: macos
            shell: bash
            shared: 1
          # ---- Windows (MSYS2) ----
          - os: windows-latest
            os_name: windows
            shell: msys2 {0}
            shared: 0
          - os: windows-latest
            os_name: windows
            shell: msys2 {0}
            shared: 1
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read            # checkout only
    steps:
      - uses: actions/checkout@v4

      # Windows needs a POSIX tool-chain
      - uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'          # context allowed in `if`
        with:
          update: true
          install: >-
            gcc git make libiconv libiconv-devel

      - name: Build hashcat
        shell: ${{ matrix.shell }}          # literal string from matrix
        env:
          SHARED: ${{ matrix.shared }}
        run: make -j$(nproc || sysctl -n hw.ncpu || echo 4)

      - uses: actions/upload-artifact@v4
        with:
          name: hashcat-${{ matrix.os_name }}-${{ matrix.shared == 0 && 'static' || 'shared' }}
          path: |
            hashcat*
            libhashcat*
            charsets/
            docs/
            extra/
            layouts/
            masks/
            modules/
            rules/
            example*

# --------------------------------------------------------
# 3) RELEASE – attach artefacts to nightly tag
# --------------------------------------------------------
  release:
    needs: build
    if: needs.sync.outputs.changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write           # create or update releases
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish nightly release
        uses: ncipollo/release-action@v1
        with:
          tag: nightly-${{ github.sha }}
          name: "Nightly build – ${{ github.sha }}"
          artifacts: "**/hashcat-*"
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.PAT_PUSH }}
